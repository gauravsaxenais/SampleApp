<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MircomApi</name>
    </assembly>
    <members>
        <member name="T:MircomApi.WebApi.Controllers.AuthController">
            <summary>
            Auth controller for resetPassword.
            </summary>
        </member>
        <member name="M:MircomApi.WebApi.Controllers.AuthController.#ctor(MircomApi.DataAccess.TASConfigDBContext,MircomApi.Services.IJwtFactory,MircomApi.Services.ITokenFactory,MircomApi.Services.IUserService)">
            <summary>
            Initializes a new instance of the <see cref="T:MircomApi.WebApi.Controllers.AuthController"/> class.
            </summary>
            <param name="context">dbcontext.</param>
            <param name="jwtFactory">jwtFactory.</param>
            <param name="userService">userService.</param>
            <param name="tokenfactory">tokenfactory.</param>
        </member>
        <member name="M:MircomApi.WebApi.Controllers.AuthController.Post(MircomApi.BusinessObjects.Models.Login.LoginModel)">
             <summary>
             POST: Validates a user against username and password.
             </summary>
             <remarks>
             Sample resetPassword:
            
                 POST /auth/resetPassword
                 {
                    "Username": "administrator",
                    "Password": ""
                 }
            
             </remarks>
             <param name="resetPassword">username and password.</param>
             <returns>return a string.</returns>
             <response code="200">Returns a token for a validated user.</response>
             <response code="400">If the resetPassword is null or fields are empty.</response>
             <response code="401">Username and password doesn't match.</response>
        </member>
        <member name="M:MircomApi.WebApi.Controllers.AuthController.ForgotPassword(System.String)">
             <summary>
            
             </summary>
             <param name="emailId">emailId.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:MircomApi.WebApi.Program">
            <summary>
            Driver class.
            </summary>
        </member>
        <member name="M:MircomApi.WebApi.Program.Main(System.String[])">
            <summary>
            Represents entry point in the application.
            </summary>
            <param name="args">args array.</param>
        </member>
        <member name="M:MircomApi.WebApi.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            CreateWebHostBuilder method.
            </summary>
            <param name="args">default.</param>
            <returns>null.</returns>
        </member>
        <member name="T:MircomApi.WebApi.Startup">
            <summary>
            Startup class.
            </summary>
        </member>
        <member name="M:MircomApi.WebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:MircomApi.WebApi.Startup"/> class.
            </summary>
            <param name="config">config.</param>
        </member>
        <member name="P:MircomApi.WebApi.Startup.Configuration">
            <summary>
            Gets Configuration.
            </summary>
        </member>
        <member name="M:MircomApi.WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP resetPassword pipeline.
            </summary>
            <param name="app">app variable.</param>
            <param name="env">env variable.</param>
        </member>
        <member name="M:MircomApi.WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">services collection.</param>
            <returns>IServiceProvider.</returns>
        </member>
    </members>
</doc>
